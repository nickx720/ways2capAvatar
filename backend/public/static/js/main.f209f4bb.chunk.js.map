{"version":3,"sources":["logo.svg","components/header.js","components/footer.js","services/user.js","components/modals.js","components/user.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","icon","marginRight","spacing","Header","classes","Fragment","AppBar","position","Toolbar","className","Typography","variant","color","noWrap","Copyright","align","Link","href","Date","getFullYear","footer","backgroundColor","palette","background","paper","padding","Footer","gutterBottom","component","updateUserId","id","data","console","log","form","FormData","item","append","fetch","method","body","rand","Math","round","random","getModalStyle","top","left","transform","width","border","boxShadow","shadows","root","margin","display","flexDirection","formSubmit","justifyContent","SimpleModal","props","user","name","React","useState","modalStyle","open","setOpen","toastOpen","settoastOpen","email","images","value","setValue","handleClose","set","target","files","oldValues","includes","style","onSubmit","event","preventDefault","navigator","onLine","then","val","catch","err","reader","FileReader","addEventListener","localStorage","setItem","JSON","stringify","result","valued","parse","getItem","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","dataURLtoFile","interval","setInterval","clearInterval","readAsDataURL","noValidate","autoComplete","TextField","label","onChange","accept","multiple","htmlFor","Button","size","onClick","Modal","onClose","aria-labelledby","aria-describedby","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","message","heroContent","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","cardMedia","cardContent","flexGrow","User","users","setUsers","useEffect","json","CssBaseline","Container","maxWidth","paragraph","Grid","container","map","xs","sm","md","Card","CardMedia","image","avatar","title","CardContent","CardActions","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f209f4bb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <CameraIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            User Profile\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"#\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\nconst Footer = () => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n        >\n          Avatar Maker\n        </Typography>\n        <Copyright />\n      </footer>\n    </React.Fragment>\n  );\n};\n\nexport default Footer;\n","export const getAllUsers = () => {\n  return fetch(\"http://localhost:4000/users\")\n    .then((val) => val.json())\n    .catch((err) => console.log(err));\n};\n\nexport const updateUserId = (id, data) => {\n  console.log(data);\n  let form = new FormData();\n  for (let item in data) {\n    form.append(item, data[item]);\n  }\n  return fetch(`http://localhost:4000/users/${id}`, {\n    method: \"Post\",\n    body: form,\n  });\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { updateUserId } from \"../services/user\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: \"50%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n  },\n  formSubmit: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    padding: \"5px\",\n  },\n}));\n\nconst SimpleModal = (props) => {\n  const { id, name } = { ...props.user };\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [toastOpen, settoastOpen] = React.useState(false);\n  const [value, setValue] = React.useState({ name: \"\", email: \"\", images: \"\" });\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const set = (name) => {\n    return ({ target: { value, files } }) => {\n      setValue((oldValues) => ({\n        ...oldValues,\n        [name]: value.includes(\"\\\\\") ? files[0] : value,\n      }));\n    };\n  };\n  const dataURLtoFile = (dataurl, filename) => {\n    var arr = dataurl.split(\",\"),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, { type: mime });\n  };\n  const updateAvatarForm = (event) => {\n    event.preventDefault();\n    console.log(navigator.onLine);\n    if (navigator.onLine) {\n      updateUserId(id, value)\n        .then((val) => handleClose())\n        .catch((err) => console.log(err));\n    } else {\n      settoastOpen(true);\n\n      const reader = new FileReader();\n      reader.addEventListener(\n        \"load\",\n        function () {\n          localStorage.setItem(\n            id,\n            JSON.stringify({ ...value, images: reader.result })\n          );\n          let valued = JSON.parse(localStorage.getItem(id));\n          let fileUri = valued.images;\n          let images = dataURLtoFile(fileUri);\n\n          const interval = setInterval(() => {\n            if (navigator.onLine) {\n              updateUserId(id, { ...valued, images })\n                .then((val) => handleClose())\n                .catch((err) => console.log(err));\n              settoastOpen(false);\n              clearInterval(interval);\n            }\n          }, 1000);\n        },\n        false\n      );\n      reader.readAsDataURL(value.images);\n    }\n  };\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Update Profile Info for {name}</h2>\n      <form\n        onSubmit={updateAvatarForm}\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <TextField\n          id=\"name\"\n          label=\"Name\"\n          value={value.name}\n          onChange={set(\"name\")}\n        />\n        <TextField\n          id=\"email\"\n          label=\"Email\"\n          value={value.email}\n          onChange={set(\"email\")}\n        />\n        <input\n          accept=\"image/*\"\n          style={{ display: \"none\" }}\n          id=\"raised-button-file\"\n          multiple\n          type=\"file\"\n          onChange={set(\"images\")}\n        />\n        <label htmlFor=\"raised-button-file\">\n          <Button component=\"span\">Upload</Button>\n        </label>\n        <div className={classes.formSubmit}>\n          <Button size=\"small\" color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n          <Button size=\"small\" color=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div>\n      <Button size=\"small\" color=\"primary\" onClick={handleOpen}>\n        Edit\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n      <Snackbar\n        open={toastOpen}\n        autoHideDuration={6000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        message=\"You are offline,your update will be synced once you are online\"\n      ></Snackbar>\n    </div>\n  );\n};\n\nexport default SimpleModal;\n","import React, { useEffect, useState } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\nimport { getAllUsers } from \"../services/user\";\nimport SimpleModal from \"./modals\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst User = () => {\n  const [users, setUsers] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    getAllUsers().then(setUsers);\n  }, []);\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Header />\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography\n              component=\"h1\"\n              variant=\"h2\"\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n            >\n              Profile Updater\n            </Typography>\n            <Typography\n              variant=\"h5\"\n              align=\"center\"\n              color=\"textSecondary\"\n              paragraph\n            >\n              Click on Edit and Have a cool avatar ð\n            </Typography>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {users.map((user) => (\n              <Grid item key={user.id} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={\n                      user.avatar ||\n                      \"https://cdn.iconscout.com/icon/free/png-256/avatar-372-456324.png\"\n                    }\n                    title={user.name}\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {user.name}\n                    </Typography>\n                    <Typography>{user.email}</Typography>\n                  </CardContent>\n                  <CardActions>\n                    <SimpleModal user={{ ...user }} />\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default User;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { User } from \"./components\";\n\nfunction App() {\n  return <User />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}